#!/bin/bash

cd "$(dirname "$0")" || exit 1
CWD=$(pwd)

PKGNAM=$(basename "$CWD")
VERSION=${VERSION:-$(curl -s https://api.github.com/repos/jellyfin/jellyfin/releases/latest | grep tag_name | grep -o "[0-9.]*")}
ARCH=${ARCH:-$(uname -m)}
TAG=${TAG:-gwh}
BUILD=${BUILD:-12}

TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/pkg-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

REPOSITORY=${REPOSITORY:-/var/cache/SlackBuilds.gwh/$PKGNAM}

FFMPEG_VERSION=${FFMPEG_VERSION:-$(curl -s https://api.github.com/repos/jellyfin/jellyfin-ffmpeg/releases/latest | jq .tag_name )}
FFMPEG_VERSION=${FFMPEG_VERSION//\"/}
FFMPEG_VERSION=${FFMPEG_VERSION#v}

PACKAGE_NAME="$PKGNAM-${VERSION//-/}_${FFMPEG_VERSION//-/_}-$ARCH-$BUILD$TAG.txz"
# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
    echo "$PACKAGE_NAME"
    exit 0
fi

# Check if the jellyfin user and group exist. If not, then bail.
# if [ "$(id -g jellyfin 2> /dev/null)" != "857" -o "$(id -u jellyfin 2> /dev/null)" != "857" ]; then
#     echo "  You must have an 'jellyfin' user and group to run this script."
#     echo "    # groupadd -g 857 jellyfin"
#     echo "    # useradd -d /var/lib/jellyfin -g jellyfin -s /bin/bash -u 857 jellyfin --system "
#     exit 1
# fi

mkdir -p "$REPOSITORY"

echo "$ARCH" | grep -q 64 && SRC_ARCH=amd64

mkdir -p "$REPOSITORY"
[ ! -e "$REPOSITORY/jellyfin_${VERSION}-${SRC_ARCH}.tar.gz" ] && \
    wget --quiet -c "https://repo.jellyfin.org/files/server/linux/latest-stable/amd64/jellyfin_${VERSION}-${SRC_ARCH}.tar.gz" \
         -O "$REPOSITORY/jellyfin_${VERSION}-${SRC_ARCH}.tar.gz"
[ ! -e "$REPOSITORY/jellyfin-ffmpeg_${FFMPEG_VERSION}.tar.xz" ] && \
    wget --quiet -c "https://github.com/jellyfin/jellyfin-ffmpeg/releases/download/v${FFMPEG_VERSION}/jellyfin-ffmpeg_${FFMPEG_VERSION}_portable_linux64-gpl.tar.xz" \
         -O "$REPOSITORY/jellyfin-ffmpeg_${FFMPEG_VERSION}.tar.xz"

rm -fr "$PKG"

mkdir -p "$PKG/var/lib/jellyfin/data" \
      "$PKG/var/lib/jellyfin/cache" \
      "$PKG/var/lib/jellyfin/config" \
      "$PKG/var/log/jellyfin" \
      "$PKG/run/jellyfin"
# chown -R jellyfin:jellyfin "$PKG/var/lib/jellyfin/data" \
#       "$PKG/var/lib/jellyfin/cache" \
#       "$PKG/var/lib/jellyfin/config" \
#       "$PKG/var/log/jellyfin" \
#       "$PKG/run/jellyfin"

mkdir -p "$PKG/opt"
cd "$PKG/opt/" || exit 1

tar xf "$REPOSITORY/jellyfin_${VERSION}-${SRC_ARCH}.tar.gz"

cd jellyfin || exit 1
tar xf "$REPOSITORY/jellyfin-ffmpeg_${FFMPEG_VERSION}.tar.xz"

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

ln -s ../../var/lib/jellyfin/data data

mkdir -p "$PKG/etc/default/"
cat <<EOF > "$PKG/etc/default/jellyfin"
# Below is the default values. Change them as you need them
DATADIR=/var/lib/jellyfin/data
CACHEDIR=/var/lib/jellyfin/cache
CONFIGDIR=/var/lib/jellyfin/config
LOGDIR=/var/log/jellyfin
EOF

mkdir -p "$PKG/etc/rc.d/"
cat <<EOF > "$PKG/etc/rc.d/rc.$PKGNAM"
#!/bin/sh

### BEGIN INIT INFO
# Provides:          Jellyfin Media Server
# Required-Start:
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: Jellyfin Media Server
# Description:       Runs Jellyfin Media Server
### END INIT INFO

# Load the defaults
. /etc/default/jellyfin


start() {
if [ -x /opt/jellyfin/jellyfin ]; then
   echo "Starting Jellyfin Media Server"
   mkdir -p /run/jellyfin/
   #/usr/bin/daemon --user=jellyfin
   /usr/bin/daemon \\
    --name=jellyfin \\
    --pidfile=/run/jellyfin/pid -- \\
       /opt/jellyfin/jellyfin \\
       --ffmpeg /opt/jellyfin/ffmpeg \\
       -d \$DATADIR \\
       -C \$CACHEDIR \\
       -c \$CONFIGDIR \\
       -l \$LOGDIR
fi
}

stop() {
echo "Stopping Jellyfin Media Server"
if /usr/bin/daemon --name=jellyfin --pidfile=/run/jellyfin/pid --running ; then
        /usr/bin/daemon --name=jellyfin --pidfile=/run/jellyfin/pid --stop
fi
}

restart() {
echo "Restarting Jellyfin Media Server"
if /usr/bin/daemon --name=jellyfin --pidfile=/run/jellyfin/pid --running ; then
        /usr/bin/daemon --name=jellyfin --pidfile=/run/jellyfin/pid --restart
else
	start
fi
}

status() {
/usr/bin/daemon --name=jellyfin --running --pidfile=/run/jellyfin/pid --verbose
}

case "\$1" in
start)
        start
        ;;
stop)
        stop
        ;;
restart)
        restart
        ;;
status)
        status
        ;;
*)
        echo "Usage: \$0 {start|stop|restart|status}"
        exit 1
esac
EOF
chmod +x "$PKG/etc/rc.d/rc.$PKGNAM"

mkdir -p "$PKG/install"
cat <<EOF > "$PKG/install/slack-desc"
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.
# Line up the first '|' above the ':' following the base package name, and
# the '|' on the right side marks the last column you can put a character in.
# You must make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

            |-----handy-ruler------------------------------------------------------|
jellyfin-bin: jellyfin-bin (The Free Software Media System)
jellyfin-bin:
jellyfin-bin:
jellyfin-bin: Jellyfin is a volunteer-built media solution that puts you in control
jellyfin-bin: of your media. Stream to any device from your own server, with no
jellyfin-bin: strings attached. Your media, your server, your way.
jellyfin-bin:
jellyfin-bin: https://jellyfin.org/
jellyfin-bin:
jellyfin-bin:
jellyfin-bin:
EOF

cd "$PKG" || exit 1

/sbin/makepkg --linkadd y --chown n --prepend "$OUTPUT/$PACKAGE_NAME"
