#!/bin/bash

# variables

TAG=gwh
TMP=/tmp/$TAG
OUTPUT=/tmp
CWD=$(pwd)
PRGNAM=$(basename $CWD)
PKG=$TMP/pkg-$PRGNAM

REPOSITORY=/home/installs/SlackBuilds/_repositories/$PRGNAM

GITHUB_REPO=postmodern/chruby
VERSION=${VERSION:-latest}

ARCH='noarch'
BUILD=1

PREFIX=/usr

SLCKFLAGS="-fPIC -O2"

mkdir -p $PKG

# mise en place
[ ! -e $REPOSITORY ] && git clone https://github.com/${GITHUB_REPO} $REPOSITORY
cd $REPOSITORY
git pull --all

# nettoyage préalable
rm -fr $PKG $TMP/$PRGNAM

cp -R $REPOSITORY $TMP/$PRGNAM
cd $TMP/$PRGNAM

[ "x$VERSION" == "xlatest" ] && VERSION=$(git describe --tags --abbrev=0)
[ "x$VERSION" == "x" ] && VERSION=trunk
[ "x$VERSION" == "xtrunk" ] && VERSION="git_r$(git rev-list --count HEAD)_$(git log -1 --format=%h)" || git checkout $VERSION

# compilation
make -j3 PREFIX=$PREFIX

# installation
mkdir -p $PKG
PREFIX=$PKG$PREFIX DOC_DIR=$PKG$PREFIX/doc/$PRGNAM DESTDIR=$PKG make install PREFIX=$PKG$PREFIX DOC_DIR=$PKG$PREFIX/doc/$PRGNAM DESTDIR=$PKG
[ -d $PKG$PREFIX/share/man ] && mv $PKG$PREFIX/share/man $PKG$PREFIX/man

# correction
cd $PKG
chown -R root:root *

[ -d $PKG/usr/man ] && find $PKG/usr/man -type f -name "*.?" -exec gzip -9f {} \;

# # Strip binaries
# ( cd $PKG
#   find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
#   find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
# )


# embaumement
mkdir -p $PKG/install
cat <<EOF > $PKG/install/slack-desc
$PRGNAM: $PRGNAM (Changes the current Ruby)
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM: https://github.com/${GITHUB_REPO}
$PRGNAM:
EOF

# empaquetage
cd $PKG
rm -f $PKG/{,usr/}lib$(uname -m | grep -o 64)/*.la
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$(echo $VERSION | sed 's/-//g')-$ARCH-$BUILD$TAG.txz
