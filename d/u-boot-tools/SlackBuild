#!/bin/bash

# Copyright 2011  Eric Hameleers, Eindhoven, NL
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PKGNAM=u-boot-tools
SRCNAM=u-boot
VERSION=${VERSION:-2014.01}
BUILD=${BUILD:-1gwh}

NUMJOBS=${NUMJOBS:-" -j7 "}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

if [ "$ARCH" = "x86_64" ]; then
  LIBDIRSUFFIX="64"
else
  LIBDIRSUFFIX=""
fi

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

rm -rf $PKG
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-$VERSION.tar.?z* || exit 1
cd $SRCNAM-$VERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Build the Sheevaplug configuration:
case "$ARCH" in
  arm*)
    make sheevaplug_config
    ;;
  *)
    ;;
esac

# Create files normally created by the cross-compiler
touch include/autoconf.mk
touch include/autoconf.mk.dep
mkdir include/generated
touch include/generated/generic-asm-offsets.h
touch lib/asm-offsets.s
touch {arch/arm/cpu/arm926ejs,examples/standalone,tools,tools/env}/.depend

# Build the tools (not ARM specific):
make tools HOSTCC="gcc $SLKCFLAGS" HOSTSTRIP=/bin/true CROSS_COMPILE=""

case "$ARCH" in
  arm*)
    make env HOSTCC="gcc $SLKCFLAGS" CROSS_COMPILE=""
    ;;
  *)
    ;;
esac

# Install the tools:
mkdir -p $PKG/{etc,usr/bin,usr/man/man1}
install -p -m 0755 tools/mkimage $PKG/usr/bin
install -p -m 0644 doc/mkimage.1 $PKG/usr/man/man1

case "$ARCH" in
  arm*)
    install -p -m 0755 tools/env/fw_printenv $PKG/usr/bin
    ( cd $PKG/usr/bin ; ln -sf fw_printenv fw_setenv )
    install -m 0644 tools/env/fw_env.config $PKG/etc/fw_env.config.new
    cat <<-EOT >>$PKG/etc/fw_env.config.new
	
	# This allows you to update the u-boot code from Linux.
	
	# SheevaPlug offsets:
	# /dev/mtd0             0xA0000         0x20000         0x20000
	
	# GuruPlug offsets:
	# /dev/mtd0             0x40000         0x20000         0x20000
	EOT
    ;;
  *)
    ;;
esac

# Strip binaries:
find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
  COPYING* CREDITS MAINTAINERS README doc/README.imximage doc/README.kwbimage doc/uImage.FIT doc/*.txt \
  $PKG/usr/doc/$PKGNAM-$VERSION

# Compress and fix manpage symlinks:
if [ -d $PKG/usr/man ]; then
  ( cd $PKG/usr/man
    for manpagedir in $(find . -type d -name "man*") ; do
      ( cd $manpagedir
        for eachpage in $( find . -type l -maxdepth 1) ; do
          ln -s $( readlink $eachpage ).gz $eachpage.gz
          rm $eachpage
        done
        gzip -9 *.?
      )
    done
  )
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
case "$ARCH" in
  arm*) zcat $CWD/doinst.sh.gz > $PKG/install/doinst.sh ;;
  *)    ;;
esac

cd $PKG
rm -f $PKG/{,usr/}lib$(uname -m | grep -o 64)/*.la
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD.txz

