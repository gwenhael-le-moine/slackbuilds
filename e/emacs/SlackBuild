#!/bin/bash

# Copyright 2008, 2009, 2010, 2011, 2012, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2023  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Written by Dušan Stefanović (stefanovic.dusan@gmail.com)
# Modified by Robby Workman <rworkman@slackbuilds.org>
# Modified by Patrick Volkerding <volkerdi@slackware.com>
# Modified by Gwenhael Le Moine <gwenhael@le-moine.org>

cd "$(dirname "$0")" || exit 1

PKGNAM=emacs
BUILD=${BUILD:-11}
TAG=${TAG:-gwh}
OUTPUT=${OUTPUT:-/tmp}

NUMJOBS=${NUMJOBS:-" -j$(( $(nproc) + 1 )) "}

TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/package-$PKGNAM

# Build Emacs with native compilation. This has better performance, but the
# installed package is larger. Pass NATIVECOMP=NO to do a normal build.
NATIVECOMP=${NATIVECOMP:-YES}

# When building with native compilation, link to the X11 libraries. This option
# is only for native compilation builds -- regular builds will include both
# an X11 and non-X11 version of Emacs.
WITHX=${WITHX:-YES}

# Pass this variable set to "--with-pgtk" to use GTK+3 without linking to X11
# libraries. This might be suitable if you're going to run under Wayland.
PGTK_OPTION=${PGTK_OPTION:-"--with-pgtk"}

# Set the X related options. The default X_TOOLKIT will be GTK+3, but you may
# set the X_TOOLKIT variable to any of these: gtk, gtk2, gtk3, lucid, athena, motif.
if [ "$WITHX" = "YES" ]; then
  if [ "$PGTK_OPTION" = "--with-pgtk" ]; then
    X_TOOLKIT=gtk3
  fi
  X_OPTIONS="--with-x --with-x-toolkit=${X_TOOLKIT:-gtk3}"
else
  X_OPTIONS="--with-x=no"
fi

# Set the proper options for native compilation or not:
if [ "$NATIVECOMP" = "YES" ]; then
  PDUMPER=${PDUMPER:-"--with-dumping=pdumper --with-native-compilation"}
else
  PDUMPER=${PDUMPER:-"--with-pdumper=no --with-dumping=unexec --without-native-compilation"}
fi

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i586 ;;
    arm*) readelf /usr/bin/file -A | grep -E -q "Tag_CPU.*[4,5]" && ARCH=arm || ARCH=armv7hl ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

BRANCH=${BRANCH:-master}
VERSION=${VERSION:-trunk}

PREFIX=${PREFIX:-/usr}

REPOSITORY=/var/cache/SlackBuilds.gwh/$PKGNAM

rm -rf "$PKG"
mkdir -p "$TMP" "$PKG"

[ ! -e $REPOSITORY ] && git clone git://git.savannah.gnu.org/emacs.git $REPOSITORY

cd "$REPOSITORY" || exit 1
git reset --hard HEAD
git pull --all

git clean -dfX                  # https://github.com/commercial-emacs/commercial-emacs

[ -e "$TMP/${PKGNAM}" ] && rm -fr "${TMP:?}/${PKGNAM}"
cp -R "$REPOSITORY" "$TMP/${PKGNAM}"
cd "$TMP/${PKGNAM}" || exit 1

git checkout "$BRANCH"
git pull

case $VERSION in
    trunk)
        VERSION="${BRANCH//-/_}_r$(git rev-list --count HEAD)_$(git log -1 --format=%h)"
        ;;
    latest)
        VERSION=$(git tag --sort=-version:refname | head -n1)
        git checkout "$VERSION"
        VERSION=${VERSION#emacs-}
        ;;
    *)
        git checkout "emacs-$VERSION"
        ;;
esac

# Tag packages that use a toolkit other than default (currently gtk3):
if [ -z "$UI" ] && [ -n "$X_TOOLKIT" ]; then
  if [ "$PGTK_OPTION" = "--with-pgtk" ]; then
    UI="pgtk"
  else
    UI="$X_TOOLKIT"
  fi
fi

PACKAGE_NAME="$PKGNAM-${VERSION}_$UI-$ARCH-$BUILD$TAG.txz"
# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PACKAGE_NAME"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
else
  SLKCFLAGS="-O2"
fi

# Don't use icecream:
PATH=$(echo "$PATH" | sed "s|/usr/libexec/icecc/bin||g" | tr -s : | sed "s/^://g" | sed "s/:$//g")

chown -R root:root .
find . \
     \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
     -exec chmod 755 {} \+ -o \
     \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
     -exec chmod 644 {} \+

# The defaults are a little too worried about adding a few more K of pure
# memory given the amount available on modern systems:
[ -e src/puresize.h ] && sed -i "s/#define SYSTEM_PURESIZE_EXTRA 0/#define SYSTEM_PURESIZE_EXTRA 100000/g" src/puresize.h

[ -e Makefile ] && make distclean
./autogen.sh

# ( cd lisp || exit 1
#   make autoloads
# )

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=${PREFIX} \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --program-prefix="" \
  --program-suffix="" \
  --mandir=${PREFIX}/man \
  --infodir=${PREFIX}/info \
  --without-gconf \
  --without-gsettings \
  --with-modules \
  $X_OPTIONS \
  $PGTK_OPTION \
  $PDUMPER \
  --build=${ARCH}-slackware-linux || exit 1

if [ "$NATIVECOMP" = "YES" ]; then
  make NATIVE_FULL_AOT=1 bootstrap $NUMJOBS || make NATIVE_FULL_AOT=1 || exit 1
else
  make $NUMJOBS || make || exit 1
fi
make install DESTDIR=$PKG || exit 1

# Seems like this nonsense is finally obsolete:
if [ -d "$PKG/var/games/emacs" ]; then
  # I don't care for broken permissions.
  chmod 755 "$PKG/var/games/emacs"
  chown -R root:games "$PKG/var/games/emacs"
  chmod 664 "$PKG/var/games/emacs/*"
fi

# This avoids a collision with Exuberant Ctags...
[ -e "$PKG${PREFIX}/bin/ctags" ] && mv "$PKG${PREFIX}/bin/ctags" "$PKG${PREFIX}/bin/ctags-emacs"
if [ -r "$PKG${PREFIX}/man/man1/ctags.1" ]; then
  mv "$PKG${PREFIX}/man/man1/ctags.1" "$PKG${PREFIX}/man/man1/ctags-emacs.1"
elif [ -r "$PKG${PREFIX}/man/man1/ctags.1.gz" ]; then
  mv "$PKG${PREFIX}/man/man1/ctags.1.gz" "$PKG${PREFIX}/man/man1/ctags-emacs.1.gz"
fi

( cd "$PKG${PREFIX}/man" || exit 1
  find . -type f -exec gzip -9 {} \+
  for i in $(find . -type l) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)

( cd "$PKG${PREFIX}/info" || exit 1
  rm -f dir
  gzip -9 ./*
)

mkdir -p "$PKG${PREFIX}/doc/$PKGNAM"
cp -a \
  BUGS* CONTRIBUTE* COPYING* INSTALL* README* ChangeLog* \
  "$PKG${PREFIX}/doc/$PKGNAM"

# Link the latest NEWS file:
( cd "$PKG${PREFIX}/doc/$PKGNAM" || exit 1
  if [ -r "$PKG${PREFIX}/share/emacs/$VERSION/etc/NEWS" ]; then
    ln -sf "${PREFIX}/share/emacs/$VERSION/etc/NEWS" .
  fi
)

mkdir -p "$PKG/install"
cat <<EOF > "$PKG/install/slack-desc"
     |-----handy-ruler------------------------------------------------------|
emacs: emacs (GNU Emacs)
emacs:
emacs: Emacs is the extensible, customizable, self-documenting real-time
emacs: display editor. If this seems to be a bit of a mouthful, an
emacs: easier explanation is that Emacs is a text editor and more. At
emacs: its core is an interpreter for Emacs Lisp, a dialect of the Lisp
emacs: programming language with extensions to support text editing.
emacs: This version supports X.
emacs:
emacs: Homepage: http://www.gnu.org/software/emacs/
emacs:
EOF

cat <<EOF > "$PKG/install/doinst.sh"
# Vim ships a better (IMHO) version of ctags, and we don't want
# to overwrite it with this one.  If you really want emacs' ctags
# either copy or link it into place yourself, or remove the vim
# packages and reinstall emacs.  Besides, does anyone know/use
# *both* emacs and vi?  I'd think that would bring the universe
# to an end.  ;-)
if [ ! -e usr/bin/ctags ]; then
  cp -a usr/bin/ctags-emacs usr/bin/ctags
  cp -a usr/man/man1/ctags-emacs.1.gz usr/man/man1/ctags.1.gz
fi
EOF

cd "$PKG" || exit 1
/sbin/makepkg -l y -c n "$OUTPUT/$PACKAGE_NAME"
