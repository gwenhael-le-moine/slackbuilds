#!/bin/bash

# Copyright 2008, 2009, 2010, 2011, 2012, 2014, 2015, 2017, 2018, 2019, 2020, 2021, 2023  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Written by Dušan Stefanović (stefanovic.dusan@gmail.com)
# Modified by Robby Workman <rworkman@slackbuilds.org>
# Modified by Patrick Volkerding <volkerdi@slackware.com>
# Modified by Gwenhael Le Moine <gwenhael@le-moine.org>

if [[ -v DISABLE_X11 ]] && [[ -v DISABLE_PGTK ]] && [[ -v DISABLE_NOX11 ]]; then
  echo "You cannot disable all 3 variants"
  exit 1
fi

cd "$(dirname "$0")" || exit 1
CWD=$(pwd)

PKGNAM=emacs
BUILD=${BUILD:-6}
TAG=${TAG:-gwh}
OUTPUT=${OUTPUT:-/tmp}

NUMJOBS=${NUMJOBS:-" -j$(( $(nproc) + 1 )) "}

TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/package-$PKGNAM

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$(uname -m)" in
    i?86) ARCH=i586 ;;
    arm*) readelf /usr/bin/file -A | grep -E -q "Tag_CPU.*[4,5]" && ARCH=arm || ARCH=armv7hl ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *) ARCH=$(uname -m) ;;
  esac
  export ARCH
fi

VERSION=${VERSION:-latest}
VARIANT=${VARIANT:-pgtk}        # pgtk or x11

REPOSITORY=/home/installs/SlackBuilds/_repositories/$PKGNAM

rm -rf "$PKG"
mkdir -p "$TMP" "$PKG"

[ ! -e $REPOSITORY ] && git clone git://git.savannah.gnu.org/emacs.git $REPOSITORY

cd "$REPOSITORY" || exit 1
git reset --hard HEAD
git pull --all

git clean -dfX                  # https://github.com/commercial-emacs/commercial-emacs

cp -R "$REPOSITORY" "$TMP/${PKGNAM}.ready"
cd "$TMP/${PKGNAM}.ready" || exit 1

case $VERSION in
    trunk)
        VERSION="r$(git rev-list --count HEAD)_$(git log -1 --format=%h)"
        ;;
    latest)
        VERSION=$(git tag --sort=-taggerdate | head -n1)
        git checkout "$VERSION"
        VERSION=$(echo $VERSION | sed 's|^emacs-||')
        ;;
    *)
        git checkout "emacs-$VERSION"
        ;;
esac

# # Determine version number the tarball is labeled with:
# VERSION=${VERSION:-$(echo $PKGNAM-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}

setup_sources() {
    cd "$TMP" || exit 1
    rm -rf $PKGNAM
    # tar xvf "$CWD/$PKGNAM-$VERSION.tar.xz" || exit 1
    # mv "$PKGNAM-$VERSION" $PKGNAM
    cp -a "$TMP/${PKGNAM}.ready" $PKGNAM
    cd $PKGNAM || exit 1

    chown -R root:root .
    find . \
         \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
         -exec chmod 755 {} \+ -o \
         \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
         -exec chmod 644 {} \+

    # The defaults are a little too worried about adding a few more K of pure
    # memory given the amount available on modern systems:
    sed -i "s/#define SYSTEM_PURESIZE_EXTRA 0/#define SYSTEM_PURESIZE_EXTRA 100000/g" src/puresize.h

    [ -e Makefile ] && make distclean
    ./autogen.sh

    ( cd lisp || exit 1
      make autoloads
    )
}

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
elif [ "$ARCH" = "armv7hl" ]; then
  SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
else
  SLKCFLAGS="-O2"
fi

# Don't use icecream:
PATH=$(echo "$PATH" | sed "s|/usr/libexec/icecc/bin||g" | tr -s : | sed "s/^://g" | sed "s/:$//g")

# Without this, the emacs-no-x11 binary won't work with the installed files:
PDUMPER=${PDUMPER:-"--with-pdumper=yes --with-dumping=pdumper"}

GWH_OPTIONS="--with-tree-sitter \
  --enable-link-time-optimization \
  --with-native-compilation=aot"

CONFIGURE_OPTIONS="--prefix=/usr \
  --sysconfdir=/etc \
  --localstatedir=/var \
  --program-prefix="" \
  --program-suffix="" \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --without-gconf \
  --without-gsettings \
  --without-android \
  --with-modules \
  $PDUMPER \
  $GWH_OPTIONS \
  --build=${ARCH}-slackware-linux"

###############
# GUI variant #
###############
if [[ ! -v DISABLE_GUI ]]; then
  setup_sources

  X11_OPTIONS="--with-x \
  --with-x-toolkit=${X_TOOLKIT:-gtk3}"
  PGTK_OPTIONS="--with-pgtk"

  case $VARIANT in
      pgtk)
          GUI_OPTIONS=$PGTK_OPTIONS
          ;;
      x11)
          GUI_OPTIONS=$X11_OPTIONS
          ;;
  esac

  CFLAGS="$SLKCFLAGS" \
        CXXFLAGS="$SLKCFLAGS" \
        ./configure \
        $CONFIGURE_OPTIONS \
        $GUI_OPTIONS || exit 1

  make $NUMJOBS || make || exit 1
  make install DESTDIR="$PKG" || exit 1

  ( cd "$PKG/usr/bin" || exit 1
    rm emacs
    mv "emacs-$VERSION" "emacs-$VERSION"
    ln -sf "emacs-$VERSION" emacs
  )
fi

# Also add a version of the binary that is not linked to X11:
if [[ ! -v DISABLE_NOX11 ]]; then
  setup_sources

  CFLAGS="$SLKCFLAGS" \
        CXXFLAGS="$SLKCFLAGS" \
        ./configure \
        $CONFIGURE_OPTIONS \
        --with-x=no || exit 1

  make $NUMJOBS || make || exit 1
  if [[ -v DISABLE_GUI ]]; then
  make install DESTDIR="$PKG" || exit 1
  fi

  # Install the non-x version:
  cat src/emacs > "$PKG/usr/bin/emacs-${VERSION}-no-x11"
  chown root:root "$PKG/usr/bin/emacs-${VERSION}-no-x11"
  chmod 1755 "$PKG/usr/bin/emacs-${VERSION}-no-x11"

  # Create unversioned symlinks for all versions of emacs:
  ( cd "$PKG/usr/bin" || exit 1
    ln -sf "emacs-$VERSION-no-x11" emacs-no-x11

    [[ -v DISABLE_GUI ]] && -sf emacs-no-x11 emacs
  )
fi

# Seems like this nonsense is finally obsolete:
if [ -d "$PKG/var/games/emacs" ]; then
  # I don't care for broken permissions.
  chmod 755 "$PKG/var/games/emacs"
  chown -R root:games "$PKG/var/games/emacs"
  chmod 664 "$PKG/var/games/emacs/*"
fi

# This avoids a collision with Exuberant Ctags...
mv "$PKG/usr/bin/ctags" "$PKG/usr/bin/ctags-emacs"
if [ -r "$PKG/usr/man/man1/ctags.1" ]; then
  mv "$PKG/usr/man/man1/ctags.1" "$PKG/usr/man/man1/ctags-emacs.1"
elif [ -r "$PKG/usr/man/man1/ctags.1.gz" ]; then
  mv "$PKG/usr/man/man1/ctags.1.gz" "$PKG/usr/man/man1/ctags-emacs.1.gz"
fi

find -0 "$PKG" | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

( cd "$PKG/usr/man" || exit 1
  find . -type f -exec gzip -9 {} \+
  for i in $(find . -type l) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
)

( cd "$PKG/usr/info" || exit 1
  rm -f dir
  gzip -9 ./*
)

mkdir -p "$PKG/usr/doc/$PKGNAM"
cp -a \
  AUTHORS* COPYING* INSTALL* README* \
  "$PKG/usr/doc/$PKGNAM"

# Link the latest NEWS file:
( cd "$PKG/usr/doc/$PKGNAM" || exit 1
  if [ -r "$PKG/usr/share/emacs/$VERSION/etc/NEWS" ]; then
    ln -sf "/usr/share/emacs/$VERSION/etc/NEWS" .
  fi
)

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR="$PKG/usr/doc/${PKGNAM}"
  cat ChangeLog | head -n 1000 > "$DOCSDIR/ChangeLog"
  touch -r ChangeLog "$DOCSDIR/ChangeLog"
fi

mkdir -p "$PKG/install"
cat <<EOF > "$PKG/install/slack-desc"
     |-----handy-ruler------------------------------------------------------|
emacs: emacs (GNU Emacs)
emacs:
emacs: Emacs is the extensible, customizable, self-documenting real-time
emacs: display editor. If this seems to be a bit of a mouthful, an
emacs: easier explanation is that Emacs is a text editor and more. At
emacs: its core is an interpreter for Emacs Lisp, a dialect of the Lisp
emacs: programming language with extensions to support text editing.
emacs: This version supports X.
emacs:
emacs: Homepage: http://www.gnu.org/software/emacs/
emacs:
EOF

cat <<EOF > "$PKG/install/doinst.sh"
# Vim ships a better (IMHO) version of ctags, and we don't want
# to overwrite it with this one.  If you really want emacs' ctags
# either copy or link it into place yourself, or remove the vim
# packages and reinstall emacs.  Besides, does anyone know/use
# *both* emacs and vi?  I'd think that would bring the universe
# to an end.  ;-)
if [ ! -e usr/bin/ctags ]; then
  cp -a usr/bin/ctags-emacs usr/bin/ctags
  cp -a usr/man/man1/ctags-emacs.1.gz usr/man/man1/ctags.1.gz
fi
EOF

cd "$PKG" || exit 1
/sbin/makepkg -l y -c n "$OUTPUT/$PKGNAM-${VERSION}_$VARIANT-$ARCH-$BUILD$TAG.txz"
