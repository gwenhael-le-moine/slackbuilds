#!/bin/bash

cd "$(dirname "$0")" || exit 1
CWD=$(pwd)

PRGNAM=$(basename "$CWD")
VERSION=${VERSION:-"trunk"}
BUILD=${BUILD:-1}
TAG=${TAG:-gwh}

PREFIX=${PREFIX:-/usr}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
    *) ARCH=$( uname -m ) ;;
  esac
fi

TMP=${TMP:-/tmp/$TAG}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}
REPOSITORY=/var/cache/SlackBuilds.gwh/$PRGNAM

if [ "$ARCH" = "i486" ]; then
    SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
    SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
    SLKCFLAGS="-O2 -fPIC"
elif [ "$ARCH" = "arm" ]; then
    SLKCFLAGS="-O2"
fi

set -e

rm -rf "$PKG"
mkdir -p "$TMP" "$PKG" "$OUTPUT"
cd "$TMP" || exit 1
rm -rf "$PRGNAM"

[ ! -e "$REPOSITORY" ] && git clone --quiet git://git.savannah.nongnu.org/eliot.git "$REPOSITORY"
cd "$REPOSITORY"
git pull --quiet --all

cd "$TMP"
cp -R "$REPOSITORY" "$PRGNAM"

cd "$PRGNAM"
case $VERSION in
    trunk)
        VERSION="git_r$(git rev-list --count HEAD)_$(git log -1 --format=%h)"
        ;;
    latest)
        VERSION="$(git tag --sort=-version:refname | head -n1)"
        git checkout --quiet "$VERSION"
        ;;
    *)
        git checkout --quiet "$VERSION"
        ;;
esac

PACKAGE_NAME="$PRGNAM-${VERSION//eliot_/}-$ARCH-$BUILD$TAG.txz"
# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
    echo "$PACKAGE_NAME"
    exit 0
fi

chown -R root:root .
find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 -o -perm 511 \) \
     -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
     -exec chmod 644 {} \;

CFLAGS="$SLKCFLAGS" \
      CXXFLAGS="$SLKCFLAGS" \
      autoreconf -i

CFLAGS="$SLKCFLAGS" \
      CXXFLAGS="$SLKCFLAGS" \
      ./configure \
      --prefix="${PREFIX}" \
      --sysconfdir=/etc \
      --mandir="${PREFIX}"/man \
      --libdir="${PREFIX}/lib$(uname -m | grep -o 64)" \
      --build="$ARCH-slackware-linux" \
      --host="$ARCH-slackware-linux"

make
make install DESTDIR="$PKG"

find "$PKG" -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
    | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p "$PKG${PREFIX}/doc/$PRGNAM"
cp -R AUTHORS ChangeLog COPYING* INSTALL LGPL-2.0.txt NEWS README THANKS TODO "$PKG${PREFIX}/doc/$PRGNAM"
cat <<EOF > "$PKG${PREFIX}/doc/$PRGNAM"/gen-ODS9-dawg.bash
#!/bin/bash

if [ \$UID = 0 ]; then
   echo "Don't run this as root !"
   exit 1
fi

echo "Downloading necessary data to /tmp/"
curl -s https://www.nongnu.org/eliot/download/letters.txt > /tmp/letters.txt
echo -n "."

echo > /tmp/ods9.txt
for i in \$(seq 2 15); do
    curl -s https://raw.githubusercontent.com/patquoi/RadStudio/master/Duplicata/ods9/bin/ods9/\$i.txt >> /tmp/ods9.txt
    echo -n "."
done
echo

echo "Generating dictionary…"
${PREFIX}/bin/compdic -d 'ODS 9.0' -l /tmp/letters.txt -i /tmp/ods9.txt -o /tmp/ods9.dawg

echo "Installing dictionary into ~/.config/eliot/ods9.dawg…"
mkdir -p ~/.config/eliot/
[ -e ~/.config/eliot/ods9.dawg ] && mv ~/.config/eliot/ods9.dawg ~/.config/eliot/ods9.dawg.orig
cp /tmp/ods9.dawg ~/.config/eliot/ods9.dawg
EOF
chmod +x "$PKG${PREFIX}/doc/$PRGNAM"/gen-ODS9-dawg.bash

mkdir -p "$PKG"/install
cat <<EOF > "$PKG"/install/slack-desc
# HOW TO EDIT THIS FILE:
# The "handy ruler" below makes it easier to edit a package description.
# Line up the first '|' above the ':' following the base package name, and
# the '|' on the right side marks the last column you can put a character in.
# You must make exactly 11 lines for the formatting to be correct.  It's also
# customary to leave one space after the ':' except on otherwise blank lines.

      |-----handy-ruler------------------------------------------------------|
$PRGNAM: $PRGNAM (A Scrabble game)
$PRGNAM:
$PRGNAM: Eliot is an open source Scrabble game, freely available under the
$PRGNAM: GNU GPL license.
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM: (see helper script ${PREFIX}/doc/$PRGNAM/gen-ODS9-dawg.bash)
$PRGNAM:
$PRGNAM: https://www.nongnu.org/eliot/fr/index.html
EOF

cd "$PKG" || exit 1
/sbin/makepkg --linkadd y --chown n --prepend "$OUTPUT/$PACKAGE_NAME"
