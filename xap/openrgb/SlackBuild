#!/bin/bash

cd "$(dirname "$0")" || exit 1
CWD=$(pwd)

# variables
UPSTREAM_REPO=${UPSTREAM_REPO:-"https://gitlab.com/CalcProgrammer1/OpenRGB"}
VERSION=${VERSION:-"trunk"}
BUILD=${BUILD:-1}

TAG="gwh"
TMP="/tmp/$TAG"

PRGNAM=$(basename "$CWD")
PKG="$TMP/pkg-$PRGNAM"
OUTPUT=${OUTPUT:-"/tmp"}

ARCH=${ARCH:-$(uname -m)}

REPOSITORY=${REPOSITORY:-"/var/cache/SlackBuilds.gwh/$PRGNAM/"}
PREFIX=${PREFIX:-"/usr"}

[ ! -e "$REPOSITORY" ] && git clone "${UPSTREAM_REPO}.git" "$REPOSITORY"
cd "$REPOSITORY" || exit 1
git pull --all
git submodule update --init

mkdir -p "$TMP"

rm -fr "$PKG" "${TMP:?}/$PRGNAM"

mkdir -p "$PKG"

cp -R "$REPOSITORY" "$TMP/$PRGNAM"
cd "$TMP/$PRGNAM" || exit 1
case $VERSION in
    trunk)
        VERSION="git_r$(git rev-list --count HEAD)_$(git log -1 --format=%h)"
        ;;
    latest)
        VERSION="$(git tag --sort=-version:refname | head -n1)"
        git checkout "$VERSION"
        ;;
    *)
        git checkout "$VERSION"
        ;;
esac

PACKAGE_NAME="$PRGNAM-${VERSION//-/}-$ARCH-$BUILD$TAG.txz"
# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ -n "${PRINT_PACKAGE_NAME}" ]; then
    echo "$PACKAGE_NAME"
    exit 0
fi

# Override default udev rule location since it would put it in a
# non-standard location in Slackware
sed -i 's|$$PREFIX/lib/udev/|/lib/udev/|g' OpenRGB.pro
sed -i 's|/usr/lib/udev/|/lib/udev/|' README.md ResourceManager.cpp

# This fixes breakage if someone is running experimental versions (master branch)
# It does not affect the current release
sed -i '/.*certs\.h/'d dependencies/hueplusplus-1.?.0/src/EntertainmentMode.cpp

qmake6  DOCS_DIR=/usr/doc/"$PRGNAM" MAN_DIR=/usr/man/man1 OpenRGB.pro
CFLAGS="$SLKCFLAGS" \
      CXXFLAGS="$SLKCFLAGS" \
      make -j "$(nproc)"
make INSTALL_ROOT="$PKG" install

find "$PKG" -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
    | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

# find "$PKG"/usr/man -type f -exec gzip -9 {} \;
# for i in $( find "$PKG"/usr/man -type l ) ; do ln -s "$( readlink "$i" ).gz" "$i.gz" ; rm "$i" ; done

# correction
cd "$PKG" || exit 1
chown -R root:root ./*

# embaumement
mkdir -p "$PKG"/install
cat <<EOF > "$PKG"/install/doinst.sh
udevadm control --reload-rules
udevadm trigger

if [ -x /usr/bin/update-desktop-database ]; then
  /usr/bin/update-desktop-database -q usr/share/applications >/dev/null 2>&1
fi

if [ -x /usr/bin/update-mime-database ]; then
  /usr/bin/update-mime-database usr/share/mime >/dev/null 2>&1
fi

if [ -e usr/share/icons/hicolor/icon-theme.cache ]; then
  if [ -x /usr/bin/gtk-update-icon-cache ]; then
    /usr/bin/gtk-update-icon-cache -f usr/share/icons/hicolor >/dev/null 2>&1
  fi
fi
EOF

cat <<EOF > "$PKG"/install/slack-desc
      |-----handy-ruler------------------------------------------------------|
$PRGNAM: $PRGNAM (LEDs control)
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM:
$PRGNAM: https://www.openrgb.org/
$PRGNAM: REQUIRES: mbedtls
EOF

# empaquetage
cd "$PKG" || exit 1
/sbin/makepkg --linkadd y --chown n --prepend "$OUTPUT/$PACKAGE_NAME"
